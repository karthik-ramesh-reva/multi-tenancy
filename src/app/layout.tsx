// src/app/layout.tsx

import type { Metadata } from 'next';
import localFont from 'next/font/local';
import './globals.css';
import { headers } from 'next/headers';
import { customerConfigs } from '@/utils/customerConfig';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
                                     children,
                                   }: {
  children: React.ReactNode;
}) {
    const headersList = await headers();
    const subdomain = headersList.get('x-subdomain');

  const customerConfig = subdomain ? customerConfigs[subdomain] : null;

  if (!customerConfig) {
    // Optionally handle missing customer config
    return (
        <html lang="en">
        <body>
        <h1>Customer not found 1</h1>
        </body>
        </html>
    );
  }

  return (
      <html lang="en">
      <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
      {/* Pass customerConfig as a prop or via context */}
      {children}
      </body>
      </html>
  );
}
